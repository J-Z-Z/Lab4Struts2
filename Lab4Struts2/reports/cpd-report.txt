Found a 22 line (106 tokens) duplication in the following files: 
Starting at line 119 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 96 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

	public void update(Curs t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.UPDATE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}

	@Override
	public void delete(int id) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
=====================================================================
Found a 21 line (104 tokens) duplication in the following files: 
Starting at line 97 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 92 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 87 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

	public void update(Profesor t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.UPDATE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}

	public void delete(int id) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
=====================================================================
Found a 19 line (92 tokens) duplication in the following files: 
Starting at line 149 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 146 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 140 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

			list = (List<Profesor>) (List<Profesor>) crit.list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}
		return list;
	}

	@Override
	public Long countSize() throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();

		Long count = ((Long) session
				.createQuery("select count(*) from Profesor as prof").iterate()
=====================================================================
Found a 18 line (89 tokens) duplication in the following files: 
Starting at line 149 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 148 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

			list = (List<Curs>) (List<Curs>) q.list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}
		return list;
	}

	@Override
	public Long countSize() throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();

		Long count = ((Long) session.createQuery("select count(*) from Curs")
=====================================================================
Found a 18 line (79 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 75 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

	public void create(Student t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.save(t);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.CREATE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}

	public void update(Student t) throws MyDaoException {
=====================================================================
Found a 16 line (75 tokens) duplication in the following files: 
Starting at line 92 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 119 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

	public void update(StudCurs t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.UPDATE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}
=====================================================================
Found a 17 line (75 tokens) duplication in the following files: 
Starting at line 75 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 77 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

	public void create(Curs t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {

			session.save(t);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.CREATE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}
=====================================================================
Found a 16 line (75 tokens) duplication in the following files: 
Starting at line 97 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 119 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

	public void update(StudCurs t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.UPDATE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}
=====================================================================
Found a 17 line (75 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 77 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

	public void create(Curs t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {

			session.save(t);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.CREATE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}
=====================================================================
Found a 16 line (64 tokens) duplication in the following files: 
Starting at line 119 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 116 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 110 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java
Starting at line 120 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

			p = (Curs) session.get(Curs.class, id);
			session.delete(p);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.DELETE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Curs> retrieve(int start, int maxRecords) throws MyDaoException {
=====================================================================
Found a 15 line (63 tokens) duplication in the following files: 
Starting at line 7 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\GenericService.java
Starting at line 7 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\GenericDAO.java

public interface GenericDAO<T> {

	List<T> retrieve() throws MyDaoException;

	List<T> retrieve(int start, int maxRecords) throws MyDaoException;

	T retrieve(int id) throws MyDaoException;

	void create(T t) throws MyDaoException;

	void update(T t) throws MyDaoException;

	void delete(int id) throws MyDaoException;

	Long countSize() throws MyDaoException;
=====================================================================
Found a 16 line (60 tokens) duplication in the following files: 
Starting at line 90 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 62 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

			return instance;
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_ERR_KEY, he);
		} catch (RuntimeException re) {
			re.printStackTrace();
			throw re;
		} finally {
			session.close();
		}

	}

	@Override
	public void create(Curs t) throws MyDaoException {
=====================================================================
Found a 15 line (59 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java
Starting at line 60 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

			Curs instance = (Curs) session.get(Curs.class, id);

			return instance;
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_ERR_KEY, he);
		} catch (RuntimeException re) {
			re.printStackTrace();
			throw re;
		} finally {
			session.close();
		}

	}
=====================================================================
Found a 14 line (55 tokens) duplication in the following files: 
Starting at line 142 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 110 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

			p = (Profesor) session.get(Profesor.class, id);
			session.delete(p);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.DELETE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}

	@SuppressWarnings("unchecked")
=====================================================================
Found a 14 line (55 tokens) duplication in the following files: 
Starting at line 66 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 148 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

			list = (List<Curs>) (List<Curs>) q.list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}
		return list;
	}

	@Override
	public Long countSize() throws MyDaoException {
=====================================================================
Found a 14 line (55 tokens) duplication in the following files: 
Starting at line 119 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 142 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

			p = (StudCurs) session.get(StudCurs.class, id);
			session.delete(p);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.DELETE_ERR_KEY, he);
		} finally {
			session.close();
		}

	}

	@Override
=====================================================================
Found a 13 line (54 tokens) duplication in the following files: 
Starting at line 90 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 57 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

			return instance;
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_ERR_KEY, he);
		} catch (RuntimeException re) {
			re.printStackTrace();
			throw re;
		} finally {
			session.close();
		}

	}
=====================================================================
Found a 14 line (53 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java
Starting at line 40 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

			list = (List<Curs>) session.createQuery("from Curs").list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}
		return list;
	}

	@Override
	public Curs retrieve(int id) throws MyDaoException {
=====================================================================
Found a 16 line (52 tokens) duplication in the following files: 
Starting at line 149 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 66 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 35 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

			list = (List<Profesor>) session.createQuery("from Profesor").list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}

		return list;

	}

	@Override
	public Profesor retrieve(int id) throws MyDaoException {
=====================================================================
Found a 15 line (51 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 35 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

			list = (List<Profesor>) session.createQuery("from Profesor").list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}

		return list;

	}

	@Override
=====================================================================
Found a 14 line (50 tokens) duplication in the following files: 
Starting at line 149 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 36 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

			list = (List<StudCurs>) session.createQuery("from StudCurs").list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}

		return list;
	}

	@SuppressWarnings("unchecked")
=====================================================================
Found a 12 line (50 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 36 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

			list = (List<StudCurs>) session.createQuery("from StudCurs").list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}

		return list;
	}
=====================================================================
Found a 11 line (49 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 149 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java

			list = (List<Universitate>) (List<Universitate>) crit.list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}
		return list;
	}
=====================================================================
Found a 19 line (49 tokens) duplication in the following files: 
Starting at line 17 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\view\model\StudentModel.java
Starting at line 17 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\view\model\ProfesorModel.java

	}

	public String getNume() {
		return nume;
	}

	public void setNume(String nume) {
		this.nume = nume;
	}

	public String getPrenume() {
		return prenume;
	}

	public void setPrenume(String prenume) {
		this.prenume = prenume;
	}

	public String getAdresa() {
=====================================================================
Found a 12 line (48 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 35 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

			listStudents = (List<Student>) session.createQuery("from Student")
					.list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}

		return listStudents;
=====================================================================
Found a 11 line (47 tokens) duplication in the following files: 
Starting at line 149 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 36 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

					.list();
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_LIST_ERR_KEY, he);
		} finally {
			session.close();
		}

		return listStudents;
=====================================================================
Found a 10 line (44 tokens) duplication in the following files: 
Starting at line 55 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\actionStruts\UniversitateModelAction.java
Starting at line 55 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\actionStruts\StudentModelAction.java
Starting at line 55 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\actionStruts\StudCursModelAction.java
Starting at line 54 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\actionStruts\ProfesorModelAction.java
Starting at line 55 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\actionStruts\CursModelAction.java

	public String deleteCursModel() throws MyDaoException {
		HttpServletRequest request = (HttpServletRequest) ActionContext
				.getContext().get(ServletActionContext.HTTP_REQUEST);

		genService.delete(Integer.parseInt(request.getParameter("id")));

		return SUCCESS;
	}

	public String editCursModel() throws MyDaoException {
=====================================================================
Found a 9 line (44 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 71 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

	public void create(Profesor t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();

		Transaction tx = session.beginTransaction();
		try {
			session.save(t);
			tx.commit();
		} catch (HibernateException he) {
=====================================================================
Found a 12 line (39 tokens) duplication in the following files: 
Starting at line 77 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\vo\Student.java
Starting at line 60 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\vo\Curs.java

	}

	public Set<StudCurs> getStudCurses() {
		return this.studCurses;
	}

	public void setStudCurses(Set<StudCurs> studCurses) {
		this.studCurses = studCurses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 51 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 135 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

	public List<Curs> retrieve(int start, int maxRecords) throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();

		Query q = session.createQuery("from Curs as c");
=====================================================================
Found a 6 line (38 tokens) duplication in the following files: 
Starting at line 131 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 125 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

	public List<Profesor> retrieve(int start, int maxRecords)
			throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();

		Criteria crit = session.createCriteria(Profesor.class);
=====================================================================
Found a 7 line (38 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 89 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

			}
			return instance;
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_ERR_KEY, he);
		} catch (RuntimeException re) {
=====================================================================
Found a 6 line (38 tokens) duplication in the following files: 
Starting at line 134 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 131 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

	public List<Student> retrieve(int start, int maxRecords)
			throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();

		Criteria crit = session.createCriteria(Student.class);
=====================================================================
Found a 6 line (37 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 57 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

			return instance;
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_ERR_KEY, he);
		} catch (RuntimeException re) {
=====================================================================
Found a 9 line (36 tokens) duplication in the following files: 
Starting at line 139 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 136 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 130 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

		Criteria crit = session.createCriteria(Profesor.class);
		int pageIndex = start;
		int numberOfRecordsPerPage = maxRecords;
		int s;
		s = (pageIndex * numberOfRecordsPerPage) - numberOfRecordsPerPage;
		crit.setFirstResult(s);
		crit.setMaxResults(numberOfRecordsPerPage);

		List<Profesor> list = null;
=====================================================================
Found a 11 line (36 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\vo\Student.java
Starting at line 39 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\vo\Profesor.java

	public String getNume() {
		return this.nume;
	}

	public void setNume(String nume) {
		this.nume = nume;
	}

	public String getPrenume() {
		return this.prenume;
	}
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\com\web\displaytag\resourceslookup\I18nStruts2Adapter.java
Starting at line 72 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\com\web\displaytag\resourceslookup\I18nStruts2Adapter.java

        ValueStack stack = TagUtils.getStack(pageContext);
        Iterator iterator = stack.getRoot().iterator();

        while (iterator.hasNext()) {
            Object o = iterator.next();

            if (o instanceof TextProvider) {
=====================================================================
Found a 8 line (34 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 139 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

		Query q = session.createQuery("from Curs as c");
		int pageIndex = start;
		int numberOfRecordsPerPage = maxRecords;
		int s;
		s = (pageIndex * numberOfRecordsPerPage) - numberOfRecordsPerPage;
		q.setFirstResult(s);
		q.setMaxResults(numberOfRecordsPerPage);
		List<Curs> list = null;
=====================================================================
Found a 5 line (34 tokens) duplication in the following files: 
Starting at line 57 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\CursService.java
Starting at line 65 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\CursService.java

	public void update(CursModel t) throws MyDaoException {
		GenericDAO<Curs> genDao = new CursDAO();
		Curs curs = new Curs();
		curs = this.transformBack(t);
		genDao.update(curs);
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 84 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 102 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java

			session.update(t);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.UPDATE_ERR_KEY, he);
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 55 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

			Student instance = (Student) session.get(Student.class, id);
			if (instance == null) {
				System.out.println("get successful, no instance found");
			} else {
				System.out.println("get successful, instance found");
			}
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 134 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 51 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

	public List<StudCurs> retrieve(int start, int maxRecords)
			throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 66 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\vo\Universitate.java
Starting at line 66 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\vo\Profesor.java

	public Set<Curs> getCurses() {
		return this.curses;
	}

	public void setCurses(Set<Curs> curses) {
		this.curses = curses;
	}
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 83 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java
Starting at line 121 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

			session.delete(p);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.DELETE_ERR_KEY, he);
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 77 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java
Starting at line 96 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

	public void update(Curs t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 92 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java
Starting at line 111 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

			session.delete(p);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.DELETE_ERR_KEY, he);
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java
Starting at line 87 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

	public void update(Profesor t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 80 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 117 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

			session.delete(p);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.DELETE_ERR_KEY, he);
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 75 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 92 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

	public void update(Student t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 84 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 120 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java

			session.delete(p);
			tx.commit();
		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.DELETE_ERR_KEY, he);
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 97 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java

	public void update(Universitate t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 84 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java

			session.save(t);
			tx.commit();

		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.CREATE_ERR_KEY, he);
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\CursService.java
Starting at line 38 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\CursService.java

	public List<CursModel> retrieve(int start, int maxRecords)
			throws MyDaoException {
		GenericDAO<Curs> genDao = new CursDAO();
		List<Curs> cursList = new ArrayList<Curs>(genDao.retrieve(start,
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 137 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 104 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

	public void delete(int id) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 50 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

	public Profesor retrieve(int id) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();

		try {
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 110 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 137 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

	public void delete(int id) throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 50 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 79 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

	public StudCurs retrieve(int id) throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();

		try {
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 114 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 137 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

	public void delete(int id) throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 68 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 62 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

		} catch (HibernateException he) {
			if (tx != null)
				tx.rollback();
			throw new MyDaoException(ErrorList.RETRIEVE_ERR_KEY, he);
		} catch (RuntimeException re) {
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java
Starting at line 96 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

	public void update(Curs t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java
Starting at line 35 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

	public List<Curs> retrieve() throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		List<Curs> list = null;
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 119 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 71 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

	public void create(Profesor t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();

		Transaction tx = session.beginTransaction();
		try {
			session.save(t);
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java
Starting at line 30 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

	public List<Profesor> retrieve() throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		List<Profesor> list = null;
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 75 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 96 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

	public void update(Curs t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 31 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudCursDAO.java

	public List<StudCurs> retrieve() throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		List<StudCurs> list = null;
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 96 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\CursDAO.java

	public void update(Curs t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
			session.update(t);
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 30 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

	public List<Student> retrieve() throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		List<Student> listStudents = null;
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\UniversitateService.java
Starting at line 44 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\StudentService.java
Starting at line 43 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\StudCursService.java
Starting at line 44 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\ProfesorService.java

		GenericDAO<Profesor> gDao = new ProfesorDAO();
		gDao.update(this.transformBack(t));
	}

	@Override
	public void delete(int id) throws MyDaoException {
		GenericDAO<Profesor> gDao = new ProfesorDAO();
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 114 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java

	public void delete(int id) throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		Universitate p;
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 50 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

	public Student retrieve(int id) throws MyDaoException {
		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\CursService.java
Starting at line 42 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\CursService.java

				maxRecords));
		List<CursModel> cursModelList = new ArrayList<CursModel>(
				this.transformList(cursList));
		return cursModelList;
	}

	@Override
	public CursModel retrieve(int id) throws MyDaoException {
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\UnivDAO.java
Starting at line 104 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\ProfesorDAO.java

	public void delete(int id) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 50 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java
Starting at line 75 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\dao\StudentDAO.java

	public void create(Student t) throws MyDaoException {

		session = HibernateUtil.getSessionFactory().openSession();
		Transaction tx = session.beginTransaction();
		try {
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 104 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\CursService.java
Starting at line 119 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\services\CursService.java

		cursModel.setProfesorNume(c.getProfesor().getNume() + " "
				+ c.getProfesor().getPrenume());
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\vo\Universitate.java
Starting at line 57 of C:\Users\victor\Documents\workspace\Lab4Struts2\src\md\victordov\lab\vo\Profesor.java

	public String getAdresa() {
		return this.adresa;
	}

	public void setAdresa(String adresa) {
		this.adresa = adresa;
	}
